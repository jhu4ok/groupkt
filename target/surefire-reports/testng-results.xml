<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="12" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-11-06T13:46:46 EET" name="Automation Test" finished-at="2018-11-06T13:46:50 EET" duration-ms="4636">
    <groups>
    </groups>
    <test started-at="2018-11-06T13:46:46 EET" name="Smoke Test" finished-at="2018-11-06T13:46:50 EET" duration-ms="4636">
      <class name="scenarios.StateObjectValidate">
        <test-method signature="getNothingMatchingFound()[pri:0, instance:scenarios.StateObjectValidate@6ed3ccb2]" started-at="2018-11-06T13:46:49 EET" name="getNothingMatchingFound" finished-at="2018-11-06T13:46:49 EET" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNothingMatchingFound -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.StateObjectValidate@6ed3ccb2]" started-at="2018-11-06T13:46:49 EET" name="setUp" finished-at="2018-11-06T13:46:49 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.StateObjectValidate@6ed3ccb2]" started-at="2018-11-06T13:46:49 EET" name="setUp" finished-at="2018-11-06T13:46:49 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getNothingStateByAnyFreeFormText()[pri:0, instance:scenarios.StateObjectValidate@6ed3ccb2]" started-at="2018-11-06T13:46:49 EET" name="getNothingStateByAnyFreeFormText" finished-at="2018-11-06T13:46:49 EET" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNothingStateByAnyFreeFormText -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.StateObjectValidate@6ed3ccb2]" started-at="2018-11-06T13:46:49 EET" name="setUp" finished-at="2018-11-06T13:46:49 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStateByAnyFreeFormText()[pri:0, instance:scenarios.StateObjectValidate@6ed3ccb2]" started-at="2018-11-06T13:46:49 EET" name="getStateByAnyFreeFormText" finished-at="2018-11-06T13:46:50 EET" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStateByAnyFreeFormText -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.StateObjectValidate@6ed3ccb2]" started-at="2018-11-06T13:46:50 EET" name="setUp" finished-at="2018-11-06T13:46:50 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="successGetAllStatesResponse()[pri:0, instance:scenarios.StateObjectValidate@6ed3ccb2]" started-at="2018-11-06T13:46:50 EET" name="successGetAllStatesResponse" finished-at="2018-11-06T13:46:50 EET" duration-ms="322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successGetAllStatesResponse -->
        <test-method signature="successGetOneStateResponse()[pri:0, instance:scenarios.StateObjectValidate@6ed3ccb2]" started-at="2018-11-06T13:46:50 EET" name="successGetOneStateResponse" finished-at="2018-11-06T13:46:50 EET" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successGetOneStateResponse -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.StateObjectValidate@6ed3ccb2]" started-at="2018-11-06T13:46:50 EET" name="setUp" finished-at="2018-11-06T13:46:50 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- scenarios.StateObjectValidate -->
      <class name="scenarios.CountryObjectValidate">
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:46 EET" name="setUp" finished-at="2018-11-06T13:46:46 EET" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getCountriesByAnyFreeFormText()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:46 EET" name="getCountriesByAnyFreeFormText" finished-at="2018-11-06T13:46:47 EET" duration-ms="859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCountriesByAnyFreeFormText -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:47 EET" name="setUp" finished-at="2018-11-06T13:46:47 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getCountryByThreeCharISO()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:47 EET" name="getCountryByThreeCharISO" finished-at="2018-11-06T13:46:47 EET" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCountryByThreeCharISO -->
        <test-method signature="getCountryByTwoCharISO()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:47 EET" name="getCountryByTwoCharISO" finished-at="2018-11-06T13:46:47 EET" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCountryByTwoCharISO -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:47 EET" name="setUp" finished-at="2018-11-06T13:46:47 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:47 EET" name="setUp" finished-at="2018-11-06T13:46:47 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getNothingMatchingFoundByAnyFreeFormText()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:47 EET" name="getNothingMatchingFoundByAnyFreeFormText" finished-at="2018-11-06T13:46:48 EET" duration-ms="322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNothingMatchingFoundByAnyFreeFormText -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:48 EET" name="setUp" finished-at="2018-11-06T13:46:48 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getNothingMatchingFoundByThreeCharISO()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:48 EET" name="getNothingMatchingFoundByThreeCharISO" finished-at="2018-11-06T13:46:48 EET" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNothingMatchingFoundByThreeCharISO -->
        <test-method signature="getNothingMatchingFoundByTwoCharISO()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:48 EET" name="getNothingMatchingFoundByTwoCharISO" finished-at="2018-11-06T13:46:48 EET" duration-ms="326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNothingMatchingFoundByTwoCharISO -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:48 EET" name="setUp" finished-at="2018-11-06T13:46:48 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="successGetAllCountriesList()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:48 EET" name="successGetAllCountriesList" finished-at="2018-11-06T13:46:49 EET" duration-ms="480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successGetAllCountriesList -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@74e52ef6]" started-at="2018-11-06T13:46:48 EET" name="setUp" finished-at="2018-11-06T13:46:48 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- scenarios.CountryObjectValidate -->
    </test> <!-- Smoke Test -->
  </suite> <!-- Automation Test -->
</testng-results>
