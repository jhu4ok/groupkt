<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="12" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-11-08T10:37:41 EET" name="Automation Test" finished-at="2018-11-08T10:37:46 EET" duration-ms="5191">
    <groups>
    </groups>
    <test started-at="2018-11-08T10:37:41 EET" name="Smoke Test" finished-at="2018-11-08T10:37:46 EET" duration-ms="5191">
      <class name="scenarios.StateObjectValidate">
        <test-method signature="getNothingMatchingFound()[pri:0, instance:scenarios.StateObjectValidate@198b6731]" started-at="2018-11-08T10:37:45 EET" name="getNothingMatchingFound" finished-at="2018-11-08T10:37:45 EET" duration-ms="346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNothingMatchingFound -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.StateObjectValidate@198b6731]" started-at="2018-11-08T10:37:45 EET" name="setUp" finished-at="2018-11-08T10:37:45 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.StateObjectValidate@198b6731]" started-at="2018-11-08T10:37:45 EET" name="setUp" finished-at="2018-11-08T10:37:45 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getNothingStateByAnyFreeFormText()[pri:0, instance:scenarios.StateObjectValidate@198b6731]" started-at="2018-11-08T10:37:45 EET" name="getNothingStateByAnyFreeFormText" finished-at="2018-11-08T10:37:45 EET" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNothingStateByAnyFreeFormText -->
        <test-method signature="getStateByAnyFreeFormText()[pri:0, instance:scenarios.StateObjectValidate@198b6731]" started-at="2018-11-08T10:37:45 EET" name="getStateByAnyFreeFormText" finished-at="2018-11-08T10:37:46 EET" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStateByAnyFreeFormText -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.StateObjectValidate@198b6731]" started-at="2018-11-08T10:37:45 EET" name="setUp" finished-at="2018-11-08T10:37:45 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="successGetAllStatesResponse()[pri:0, instance:scenarios.StateObjectValidate@198b6731]" started-at="2018-11-08T10:37:46 EET" name="successGetAllStatesResponse" finished-at="2018-11-08T10:37:46 EET" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successGetAllStatesResponse -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.StateObjectValidate@198b6731]" started-at="2018-11-08T10:37:46 EET" name="setUp" finished-at="2018-11-08T10:37:46 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.StateObjectValidate@198b6731]" started-at="2018-11-08T10:37:46 EET" name="setUp" finished-at="2018-11-08T10:37:46 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="successGetOneStateResponse()[pri:0, instance:scenarios.StateObjectValidate@198b6731]" started-at="2018-11-08T10:37:46 EET" name="successGetOneStateResponse" finished-at="2018-11-08T10:37:46 EET" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successGetOneStateResponse -->
      </class> <!-- scenarios.StateObjectValidate -->
      <class name="scenarios.CountryObjectValidate">
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:41 EET" name="setUp" finished-at="2018-11-08T10:37:42 EET" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getCountriesByAnyFreeFormText()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:42 EET" name="getCountriesByAnyFreeFormText" finished-at="2018-11-08T10:37:42 EET" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCountriesByAnyFreeFormText -->
        <test-method signature="getCountryByThreeCharISO()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:42 EET" name="getCountryByThreeCharISO" finished-at="2018-11-08T10:37:43 EET" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCountryByThreeCharISO -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:42 EET" name="setUp" finished-at="2018-11-08T10:37:42 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getCountryByTwoCharISO()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:43 EET" name="getCountryByTwoCharISO" finished-at="2018-11-08T10:37:43 EET" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCountryByTwoCharISO -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:43 EET" name="setUp" finished-at="2018-11-08T10:37:43 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:43 EET" name="setUp" finished-at="2018-11-08T10:37:43 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getNothingMatchingFoundByAnyFreeFormText()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:43 EET" name="getNothingMatchingFoundByAnyFreeFormText" finished-at="2018-11-08T10:37:43 EET" duration-ms="316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNothingMatchingFoundByAnyFreeFormText -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:43 EET" name="setUp" finished-at="2018-11-08T10:37:43 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getNothingMatchingFoundByThreeCharISO()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:43 EET" name="getNothingMatchingFoundByThreeCharISO" finished-at="2018-11-08T10:37:44 EET" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNothingMatchingFoundByThreeCharISO -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:44 EET" name="setUp" finished-at="2018-11-08T10:37:44 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getNothingMatchingFoundByTwoCharISO()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:44 EET" name="getNothingMatchingFoundByTwoCharISO" finished-at="2018-11-08T10:37:44 EET" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNothingMatchingFoundByTwoCharISO -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:44 EET" name="setUp" finished-at="2018-11-08T10:37:44 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="successGetAllCountriesList()[pri:0, instance:scenarios.CountryObjectValidate@3857f613]" started-at="2018-11-08T10:37:44 EET" name="successGetAllCountriesList" finished-at="2018-11-08T10:37:45 EET" duration-ms="549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successGetAllCountriesList -->
      </class> <!-- scenarios.CountryObjectValidate -->
    </test> <!-- Smoke Test -->
  </suite> <!-- Automation Test -->
</testng-results>
